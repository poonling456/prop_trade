load("C:/Users/Anthony/Desktop/ongoing/cn comdty/NN/data.RData")
as.numeric(na.omit(dataframe[testing])$return)[sign(NN_result$net.result)==0]
sign(as.numeric(na.omit(dataframe[testing])$return))
sign(as.numeric(na.omit(dataframe[testing])[,'return']))
View(dataframe)
library(Rblpapi)
library(quantmod)
library(candlesticks)
library(tseries)
library(ggplot2)
library(reshape2)
library(foreach)
library(doParallel)
library(plyr)
library(lubridate)
library(neuralnet)
sign(as.numeric(na.omit(dataframe[testing])$return))
table(sign(as.numeric(na.omit(dataframe[testing])$return)))
#see if sign is correct
table(sign(as.numeric(na.omit(dataframe[testing])$return)),sign(NN_result$net.result))
load("C:/Users/Anthony/Desktop/ongoing/cn comdty/NN/data.RData")
1<NA
ifelse(1==1,1,5)
ifelse(1==NA,1,5)
first_price_greater=mapply(
function(x,y)
{
px=dce_px_vo$px[x]
first_greater=Position(function(z) z > y*exp(target),px)
first_smaller=Position(function(z) z < y*exp(-target),px)
if(is.na(first_greater))
{
if(is.na(first_smaller)) return(0)
else return(-1)
}
else
{
if(is.na(first_smaller)) return(1)
else return(ifelse(first_greater>first_smaller,-1,1))
}
},
period[1:5],
price_base[1:5])
pnl=diff(Cl(security))
hist(na.omit(pnl),breaks = min(pnl,na.rm = T):max(pnl,na.rm = T))
hist(na.omit(pnl),breaks = min(pnl,na.rm = T):max(pnl,na.rm = T),xlim = c(-10,10))
commission=0.000165
b_a_spread=1
target=2*(commission+b_a_spread/mean(dce_px_vo$px))
deadline=60*60
#price have to move by target within deadline (1 hour)
#+ve move = 1
#-ve move = -1
#otherwise = 0
period=paste(time(security)+1,time(security)+deadline,sep='/')
price_base=Cl(security)
library(Rblpapi)
library(quantmod)
library(candlesticks)
library(tseries)
library(ggplot2)
library(reshape2)
library(foreach)
library(doParallel)
library(plyr)
library(lubridate)
library(neuralnet)
#learn exit time instead of return
pnl=diff(Cl(security))
hist(na.omit(pnl),breaks = min(pnl,na.rm = T):max(pnl,na.rm = T))
hist(na.omit(pnl),breaks = min(pnl,na.rm = T):max(pnl,na.rm = T),xlim = c(-10,10))
commission=0.000165
b_a_spread=1
target=2*(commission+b_a_spread/mean(dce_px_vo$px))
deadline=60*60
#price have to move by target within deadline (1 hour)
#+ve move = 1
#-ve move = -1
#otherwise = 0
period=paste(time(security)+1,time(security)+deadline,sep='/')
price_base=Cl(security)
mapply(
function(x,y)
{
px=dce_px_vo$px[x]
first_greater=Position(function(z) z > y*exp(target),px)
first_smaller=Position(function(z) z < y*exp(-target),px)
if(is.na(first_greater))
{
if(is.na(first_smaller)) return(0)
else return(-1)
}
else
{
if(is.na(first_smaller)) return(1)
else return(ifelse(first_greater>first_smaller,-1,1))
}
},
period[1:5],
price_base[1:5])
period[1:5]
price_base[1:5]
dce_px_vo$px[period[1:5]]
View(dce_px_vo$px[period[1:5]])
price_base[1:5]
period[1:5]
price_base[167:171]
price_base[167:171]*exp(target)
price_base[167:171]*exp(-target)
mapply(
function(x,y)
{
px=dce_px_vo$px[x]
first_greater=Position(function(z) z > y*exp(target),px)
first_smaller=Position(function(z) z < y*exp(-target),px)
if(is.na(first_greater))
{
if(is.na(first_smaller)) return(0)
else return(-1)
}
else
{
if(is.na(first_smaller)) return(1)
else return(ifelse(first_greater>first_smaller,-1,1))
}
},
period[167:171],
price_base[167:171])
View(dce_px_vo$px[period[167]])
stopwatch=proc.time()
stopwatch=proc.time()
temp=dce_px_vo$px[period[1]]>price_base[1]*exp(target) - dce_px_vo$px[period[1]]<price_base[1]*exp(-target)
head(temp[temp!=0],1)
proc.time()-stopwatch
stopwatch=proc.time()
temp=(dce_px_vo$px[period[1]]>price_base[1]*exp(target)) - (dce_px_vo$px[period[1]]<price_base[1]*exp(-target))
head(temp[temp!=0],1)
proc.time()-stopwatch
price_base[1]*exp(-target)
stopwatch=proc.time()
temp=dce_px_vo$px[period[1]]
first_greater=Position(function(z) z > price_base[1]*exp(target),temp)
first_smaller=Position(function(z) z < price_base[1]*exp(-target),temp)
if(is.na(first_greater))
{
if(is.na(first_smaller)) return(0)
else return(-1)
}else
{
if(is.na(first_smaller)) return(1)
else return(ifelse(first_greater>first_smaller,-1,1))
}
proc.time()-stopwatch
stopwatch=proc.time()
temp=dce_px_vo$px[period[1]]
first_greater=Position(function(z) z > price_base[1]*exp(target),temp)
first_smaller=Position(function(z) z < price_base[1]*exp(-target),temp)
if(is.na(first_greater))
{
if(is.na(first_smaller)) 0
else -1
}else
{
if(is.na(first_smaller)) 1
else ifelse(first_greater>first_smaller,-1,1)
}
proc.time()-stopwatch
stopwatch=proc.time()
temp=(dce_px_vo$px[period[1]]>price_base[1]*exp(target)) - (dce_px_vo$px[period[1]]<price_base[1]*exp(-target))
head(temp[temp!=0],1)
proc.time()-stopwatch
dce_px_vo$px[period[1]]>price_base[1]*exp(target)
View(dce_px_vo$px[period[1]])
price_base[1]*exp(target)
stopwatch=proc.time()
temp=(dce_px_vo$px[period[1]]>as.numeric(price_base[1]*exp(target))) - (dce_px_vo$px[period[1]]<as.numeric(price_base[1]*exp(-target)))
head(temp[temp!=0],1)
proc.time()-stopwatch
View(temp)
as.numeric(price_base[1]*exp(target))
price_base[1]
stopwatch=proc.time()
temp=(dce_px_vo$px[period[1261]]>as.numeric(price_base[1261]*exp(target))) - (dce_px_vo$px[period[1261]]<as.numeric(price_base[1261]*exp(-target)))
head(temp[temp!=0],1)
proc.time()-stopwatch
stopwatch=proc.time()
temp=dce_px_vo$px[period[1261]]
first_greater=Position(function(z) z > price_base[1]*exp(target),temp)
first_smaller=Position(function(z) z < price_base[1]*exp(-target),temp)
if(is.na(first_greater))
{
if(is.na(first_smaller)) 0
else -1
}else
{
if(is.na(first_smaller)) 1
else ifelse(first_greater>first_smaller,-1,1)
}
proc.time()-stopwatch
px_label=mapply(
function(x,y)
{
px=dce_px_vo$px[x]
cross=(px>(as.numeric(y)*exp(target))) - (px<(as.numeric(y)*exp(-target)))
as.numeric(head(cross[cross!=0],1))
},
period,
price_base
)
warnings
warnings()
View(px_label)
(dce_px_vo$px[period[1261]]>as.numeric(price_base[1261]*exp(target))) - (dce_px_vo$px[period[1261]]<as.numeric(price_base[1261]*exp(-target)))
mapply(
function(x,y)
{
px=dce_px_vo$px[x]
cross=(px>(as.numeric(y)*exp(target))) - (px<(as.numeric(y)*exp(-target)))
as.numeric(head(cross[cross!=0],1))
},
period[1000:1010],
price_base[1000:1010],
SIMPLIFY = F
)
mapply(
function(x,y)
{
px=dce_px_vo$px[x]
cross=(px>(as.numeric(y)*exp(target))) - (px<(as.numeric(y)*exp(-target)))
as.numeric(head(cross[cross!=0],1))
},
period[1000:1010],
price_base[1000:1010],
SIMPLIFY = T
)
px_label[1000:1010]
View(px_label)
mapply(
function(x,y)
{
px=dce_px_vo$px[x]
cross=(as.numeric(px)>(y*exp(target))) - (as.numeric(px)<(y*exp(-target)))
as.numeric(head(cross[cross!=0],1))
},
period[1000:1010],
price_base[1000:1010],
SIMPLIFY = T
)
mapply(
function(y,x)
{
px=dce_px_vo$px[x]
cross=(as.numeric(px)>(y*exp(target))) - (as.numeric(px)<(y*exp(-target)))
as.numeric(head(cross[cross!=0],1))
},
price_base[1000:1010],
period[1000:1010],
SIMPLIFY = T
)
View(px_label)
View(price_base)
mapply(
function(y,x)
{
px=dce_px_vo$px[x]
cross=(as.numeric(px)>(y*exp(target))) - (as.numeric(px)<(y*exp(-target)))
as.numeric(head(cross[cross!=0],1))
},
price_base[1000:1010],
period[1000:1010],
SIMPLIFY = F
)
temp=(as.numeric(dce_px_vo$px[period[1261]])>price_base[1261]*exp(target)) - (as.numeric(dce_px_vo$px[period[1261]])<price_base[1261]*exp(-target))
(as.numeric(dce_px_vo$px[period[1261]])<price_base[1261]*exp(-target))
as.numeric(dce_px_vo$px[period[1261]])
price_base[1261]*exp(-target)
as.numeric(dce_px_vo$px[period[1261]])<price_base[1261]*exp(-target)
mapply(
function(x,y)
{
px=dce_px_vo$px[x]
cross=(px>(as.numeric(y)*exp(target))) - (px<(as.numeric(y)*exp(-target)))
xts(as.numeric(head(cross[cross!=0],1)),time(y))
},
period[1000:1010],
price_base[1000:1010],
SIMPLIFY = F
)
mapply(
function(x,y)
{
px=dce_px_vo$px[x]
cross=(px>(as.numeric(y)*exp(target))) - (px<(as.numeric(y)*exp(-target)))
xts(as.numeric(head(cross[cross!=0],1)),time(y))
},
period[1000:1010],
price_base[1000:1010],
SIMPLIFY = F
)
x
mapply(
function(x,y)
{
px=dce_px_vo$px[x]
cross=(px>(as.numeric(y)*exp(target))) - (px<(as.numeric(y)*exp(-target)))
xts(as.numeric(head(cross[cross!=0],1)),time(y))
},
period[1000:1010],
price_base[1000:1010],
SIMPLIFY = F
)
mapply(
function(x,y)
{
px=dce_px_vo$px[x]
cross=(px>(as.numeric(y)*exp(target))) - (px<(as.numeric(y)*exp(-target)))
print(time(y))
},
period[1000:1010],
price_base[1000:1010],
SIMPLIFY = F
)
mapply(
function(x,y)
{
px=dce_px_vo$px[x]
cross=(px>(as.numeric(y)*exp(target))) - (px<(as.numeric(y)*exp(-target)))
print(time(x))
},
period[1000:1010],
price_base[1000:1010],
SIMPLIFY = F
)
mapply(
function(x,y)
{
px=dce_px_vo$px[x]
cross=(px>(as.numeric(y)*exp(target))) - (px<(as.numeric(y)*exp(-target)))
print((y))
},
period[1000:1010],
price_base[1000:1010],
SIMPLIFY = F
)
mapply(
function(x,y,z)
{
px=dce_px_vo$px[x]
cross=(px>(as.numeric(y)*exp(target))) - (px<(as.numeric(y)*exp(-target)))
xts(head(cross[cross!=0],1),z)
},
period[1000:1010],
price_base[1000:1010],
time(price_base)[1000:1010],
SIMPLIFY = F
)
warning
warnings()
mapply(
function(x,y,z)
{
px=dce_px_vo$px[x]
cross=(px>(as.numeric(y)*exp(target))) - (px<(as.numeric(y)*exp(-target)))
xts(head(cross[cross!=0],1),z)
},
period[1000:1010],
price_base[1000:1010],
time(price_base)[1000:1010],
SIMPLIFY = T
)
mapply(
function(x,y,z)
{
px=dce_px_vo$px[x]
cross=(px>(as.numeric(y)*exp(target))) - (px<(as.numeric(y)*exp(-target)))
head(cross[cross!=0],1)
},
period[1000:1010],
price_base[1000:1010],
time(price_base)[1000:1010],
SIMPLIFY = T
)
View(mapply(
function(x,y,z)
{
px=dce_px_vo$px[x]
cross=(px>(as.numeric(y)*exp(target))) - (px<(as.numeric(y)*exp(-target)))
head(cross[cross!=0],1)
},
period[1000:1010],
price_base[1000:1010],
time(price_base)[1000:1010],
SIMPLIFY = T
))
mapply(
function(x,y)
{
px=dce_px_vo$px[x]
cross=(px>(as.numeric(y)*exp(target))) - (px<(as.numeric(y)*exp(-target)))
head(cross[cross!=0],1)
},
period[1000:1110],
price_base[1000:1110],
SIMPLIFY = T
)
save.image("C:/Users/Anthony/Desktop/ongoing/cn comdty/NN/data.RData")
