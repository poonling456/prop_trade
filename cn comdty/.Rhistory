datex=time(exit_sig)
foo(...)
foo=function(...)
{
class(...)
}
foo(...)
foo=function(...)
{
class(...)
print(...)
}
foo(...)
foo=function(...)
{
print(...)
}
foo(...)
library(Rblpapi)
library(quantmod)
library(candlesticks)
library(tseries)
library(ggplot2)
library(reshape2)
library(foreach)
library(doParallel)
library(plyr)
library(lubridate)
trailing_stop_pct=function(tick_price,dates, datex, k=0.995)
{
price_period=tick_price[paste(nxd(dates,1,time(tick_price)),nxd(datex,-1,time(tick_price)),sep = '/')]
hwm=cummax(price_period)
limit=hwm*k
touch=head(price_period[price_period<limit],1)
if(length(touch)==0) NA
return(head(tick_price[time(touch)+1],1))
}
trailing_stop_pct=function(tick_price,dates, datex, k=0.995)
{
price_period=tick_price[paste(nxd(dates,1,time(tick_price)),nxd(datex,-1,time(tick_price)),sep = '/')]
hwm=cummax(price_period)
limit=hwm*k
touch=head(price_period[price_period<limit],1)
if(length(touch)==0) NA
return(head(tick_price[time(touch)+1],1))
}
View(dce_px_vo)
trial=dce_1m[1:500]
trailing_stop_pct(tick_price = dce_px_vo$px,dates = as.POSIXct('2017-10-09 10:00:00'))
as.POSIXct('2017-10-09 10:00:00')
trailing_stop_pct(tick_price = dce_px_vo$px, dates = as.POSIXct('2017-10-09 10:00:00'), datex = as.POSIXct('2017-10-10 12:00:00'))
options(error=recover)
trailing_stop_pct(tick_price = dce_px_vo$px, dates = as.POSIXct('2017-10-09 10:00:00'), datex = as.POSIXct('2017-10-10 12:00:00'))
price_period=tick_price[paste(nxd(dates,1,time(tick_price)),nxd(datex,-1,time(tick_price)),sep = '/')]
paste(nxd(dates,1,time(tick_price)),nxd(datex,-1,time(tick_price)),sep = '/')
nxd(dates,1,time(tick_price))
nxd
nxd=function(x,n=1,time_object=time(security))
{
x=as.POSIXct(x)
time_object=as.POSIXct(time_object)
i= match(x,time_object)
as.POSIXct(ifelse(i+n<1,
time_object[1],
ifelse((i+1)>length(time_object),
tail(time_object,1),
time_object[i+n])),origin=as.POSIXct( '1970-01-01 08:00:00'))
}
nxd=function(x,n=1,time_object=time(security))
{
x=as.POSIXct(x)
time_object=as.POSIXct(time_object)
i= match(x,time_object)
as.POSIXct(ifelse(i+n<1,
time_object[1],
ifelse((i+1)>length(time_object),
tail(time_object,1),
time_object[i+n])),origin=as.POSIXct( '1970-01-01 08:00:00'))
}
trailing_stop_pct=function(tick_price,dates, datex, k=0.995)
{
price_period=tick_price[paste(nxd(dates,1,time(tick_price)),nxd(datex,-1,time(tick_price)),sep = '/')]
hwm=cummax(price_period)
limit=hwm*k
touch=head(price_period[price_period<limit],1)
if(length(touch)==0) NA
return(head(tick_price[time(touch)+1],1))
}
trial=dce_1m[1:500]
trailing_stop_pct(tick_price = dce_px_vo$px, dates = as.POSIXct('2017-10-09 10:00:00'), datex = as.POSIXct('2017-10-10 12:00:00'))
price_period=tick_price[paste(nxd(dates,1,time(tick_price)),nxd(datex,-1,time(tick_price)),sep = '/')]
nxd(datex,-1,time(tick_price))
nxd(dates,1,time(tick_price))
dates
time(tick_price)
trail=as.POSIXct('2017-10-09')
trail=as.POSIXct('2017-10-09 09:00:00')
nxd(trail)
nxd(trail,n = 1,time_object = time(dce_1m))
head(dce_1m)
trail=as.POSIXct('2017-10-09 09:00:59')
nxd(trail,n = 1,time_object = time(dce_1m))
nxd(trail,n = 1,time_object = time(dce_px_vo))
trail=c(as.POSIXct('2017-10-09 09:00:59'),as.POSIXct('2017-11-09 09:00:59'))
nxd(trail,n = 1,time_object = time(dce_px_vo))
nxd(trail,n = 1,time_object = time(dce_1m))
trailing_stop_pct=function(tick_price,dates, datex, k=0.995)
{
price_period=tick_price[paste(nxd(dates,1,time(tick_price)),nxd(datex,-1,time(tick_price)),sep = '/')]
hwm=cummax(price_period)
limit=hwm*k
touch=head(price_period[price_period<limit],1)
if(length(touch)==0) NA
return(head(tick_price[time(touch)+1],1))
}
trailing_stop_pct(tick_price = dce_px_vo$px, dates = as.POSIXct('2017-10-09 09:00:59'), datex = as.POSIXct('2017-10-10 09:00:59'))
trial=dce_1m[1:500]
trailing_stop_pct(tick_price = dce_px_vo$px, dates = as.POSIXct('2017-10-09 09:00:59'), datex = as.POSIXct('2017-10-10 09:00:59'))
chartSeries(trail)
View(trial)
View(OHLC(trial))
chartSeries(OHLC(trial))
trailing_stop_pct(second_price = to.period(dce_px_vo,period = 'seconds',k = 1)$px, dates = as.POSIXct('2017-10-09 09:00:59'), datex = as.POSIXct('2017-10-10 09:00:59'))
to.period(dce_px_vo,period = 'seconds',k = 1)
chartSeries(head(to.period(dce_px_vo,period = 'seconds',k = 1),100))
dce_px_vo['2017-10-09 09:00:02']
trailing_stop_pct=function(second_price,dates, datex, k=0.995)
{
#assume OHLC input
lo=Lo(second_price)
timestamp=time(lo)
price_period=lo[paste(nxd(dates,1,timestamp),nxd(datex,-1,timestamp),sep = '/')]
hwm=cummax(price_period)
limit=hwm*k
touch=head(price_period[price_period<limit],1)
if(length(touch)==0) NA
return(head(Op(second_price)[time(touch)+1],1))
}
trial=dce_1m[1:500]
trailing_stop_pct(second_price = to.period(dce_px_vo,period = 'seconds',k = 1), dates = as.POSIXct('2017-10-09 09:00:59'), datex = as.POSIXct('2017-10-10 09:00:59'))
chartSeries(trail)
chartSeries(OHLC(trail)()
chartSeries(OHLC(trail)
)
trao;
trial=dce_1m[1:500]
trailing_stop_pct(second_price = to.period(dce_px_vo,period = 'seconds',k = 1), dates = as.POSIXct('2017-10-09 09:00:59'), datex = as.POSIXct('2017-10-10 09:00:59'))
chartSeries(OHLC(trial))
chartSeries(OHLC(trial),TA=addTA(cummax(Lo(trial)['2017-10-09 09:00:59/'])))
chartSeries(OHLC(trial),TA='addTA(cummax(Lo(trial)['2017-10-09 09:00:59/']))')
0
chartSeries(OHLC(trial),TA='addTA(cummax(Lo(trial)["2017-10-09 09:00:59/"]))')
chartSeries(OHLC(trial),TA='addTA(cummax(Lo(trial)["2017-10-09 09:00:59/"]),on=1)')
chartSeries(OHLC(trial),TA='addTA(0.995cummax(Lo(trial)["2017-10-09 09:00:59/"]),on=1)')
chartSeries(OHLC(trial),TA='addTA(0.995*cummax(Lo(trial)["2017-10-09 09:00:59/"]),on=1)')
chartSeries(head(OHLC(trial),100),TA='addTA(0.995*cummax(Lo(trial)["2017-10-09 09:00:59/"]),on=1)')
chartSeries(head(OHLC(trial),10),TA='addTA(0.995*cummax(Lo(trial)["2017-10-09 09:00:59/"]),on=1)')
chartSeries(head(OHLC(to.period(dce_px_vo,period = 'seconds',k = 1)),100),TA='addTA(0.995*cummax(Lo(trial)["2017-10-09 09:00:59/"]),on=1)')
chartSeries(head(OHLC(to.period(dce_px_vo,period = 'seconds',k = 1)),100),TA='addTA(0.995*cummax(Lo(to.period(dce_px_vo,period = 'seconds',k = 1))["2017-10-09 09:00:59/"]),on=1)')
chartSeries(head(OHLC(trial),10),TA='addTA(0.995*cummax(Lo(to.period(dce_px_vo,period = 'seconds',k = 1))["2017-10-09 09:00:59/"]),on=1)')
chartSeries(head(OHLC(to.period(dce_px_vo,period = 'seconds',k = 1)),100),TA='addTA(0.995*cummax(Lo(to.period(dce_px_vo,period = 'seconds',k = 1))["2017-10-09 09:00:59/"]),on=1)')
addTA(0.995*cummax(Lo(to.period(dce_px_vo,period = 'seconds',k = 1))["2017-10-09 09:00:59/"])
)
to.period(dce_px_vo,period = 'seconds',k = 1))
View(to.period(dce_px_vo,period = 'seconds',k = 1))
cummax(Lo(to.period(dce_px_vo,period = 'seconds',k = 1)))
View(cummax(Lo(to.period(dce_px_vo,period = 'seconds',k = 1)))*0.995)
View(cummax(Lo(to.period(dce_px_vo,period = 'seconds',k = 1)))['2017-10-09 09:00:59/']*0.995)
chartSeries(head(to.period(dce_px_vo,period = 'seconds',k = 1),100))
chartSeries(head(to.period(dce_px_vo,period = 'seconds',k = 1),100),TA="cummax(Lo(to.period(dce_px_vo,period = 'seconds',k = 1)))['2017-10-09 09:00:59/']*0.995")
chartSeries(head(to.period(dce_px_vo,period = 'seconds',k = 1),100),TA="addTA(cummax(Lo(to.period(dce_px_vo,period = 'seconds',k = 1)))['2017-10-09 09:00:59/']*0.995)")
chartSeries(head(to.period(dce_px_vo,period = 'seconds',k = 1),100),TA="addTA(cummax(Lo(to.period(dce_px_vo,period = 'seconds',k = 1)))['2017-10-09 09:00:59/']*0.995,on=1)")
trailing_stop_pct(second_price = to.period(dce_px_vo,period = 'seconds',k = 1), dates = as.POSIXct('2017-10-09 09:00:59'), datex = as.POSIXct('2017-10-10 09:00:59'))
chartSeries(head(to.period(dce_px_vo,period = 'seconds',k = 1),200),TA="addTA(cummax(Lo(to.period(dce_px_vo,period = 'seconds',k = 1)))['2017-10-09 09:00:59/']*0.995,on=1)")
trailing_stop_pct=function(second_price,dates, datex, k=0.995)
{
#assume OHLC input
lo=Lo(second_price)
timestamp=time(lo)
price_period=lo[paste(nxd(dates,1,timestamp),nxd(datex,-1,timestamp),sep = '/')]
hwm=cummax(price_period)
limit=hwm*k
touch=head(price_period[price_period<limit],1)
chartSeries(price_period,TA='addTA(limit,on=1)')
if(length(touch)==0) NA
return(head(Op(second_price)[time(touch)+1],1))
}
trailing_stop_pct(second_price = to.period(dce_px_vo,period = 'seconds',k = 1), dates = as.POSIXct('2017-10-09 09:00:59'), datex = as.POSIXct('2017-10-10 09:00:59'))
trailing_stop_pct=function(second_price,dates, datex, k=0.995)
{
#assume OHLC input
lo=Lo(second_price)
timestamp=time(lo)
price_period=lo[paste(nxd(dates,1,timestamp),nxd(datex,-1,timestamp),sep = '/')]
hwm=cummax(price_period)
limit=hwm*k
touch=head(price_period[price_period<limit],1)
chartSeries(price_period,TA='addTA(limit,on=1)')
if(length(touch)==0) NA
return(head(Op(second_price)[time(touch)+1],1))
}
trailing_stop_pct(second_price = to.period(dce_px_vo,period = 'seconds',k = 1), dates = as.POSIXct('2017-10-09 09:00:59'), datex = as.POSIXct('2017-10-10 09:00:59'))
chartSeries(price_period,TA='addTA(limit,on=1)')
limit
chartSeries(price_period)
addTA(limit,on=1)
chartSeries(head(price_period,100))
addTA(limit,on=1)
dates
head(limit)
chartSeries(head(price_period,100),addTA(limit,on=1))
chartSeries(head(price_period,100),TA = 'addTA(limit,on=1)')
chartSeries(head(price_period,100))
chartSeries(price_period)
addTA(limit)
chartSeries(price_period,TA='addTA(limit)')
chartSeries(price_period,TA='addTA(unname(limit))')
trial=dce_1m[1:500]
trial=dce_1m[1:500]
trailing_stop_pct(second_price = to.period(dce_px_vo,period = 'seconds',k = 1), dates = as.POSIXct('2017-10-09 08:59:00'), datex = as.POSIXct('2017-10-10 09:00:59'))
trailing_stop_pct=function(second_price,dates, datex, k=0.995)
{
#assume OHLC input
lo=Lo(second_price)
timestamp=time(lo)
price_period=lo[paste(nxd(dates,1,timestamp),nxd(datex,-1,timestamp),sep = '/')]
hwm=cummax(price_period)
limit=hwm*k
touch=head(price_period[price_period<limit],1)
if(length(touch)==0) NA
return(head(Op(second_price)[time(touch)+1],1))
}
trial=dce_1m[1:500]
trailing_stop_pct(second_price = to.period(dce_px_vo,period = 'seconds',k = 1), dates = as.POSIXct('2017-10-09 08:59:00'), datex = as.POSIXct('2017-10-10 09:00:59'))
chartSeries(trial)
trial=dce_1m['2017-10-09 08:59:00/2017-10-10 09:00:59']
trial=to.period(dce_px_vo,period = 'seconds',k = 1)['2017-10-09 08:59:00/2017-10-10 09:00:59']
View(trial)
trailing_stop_pct(second_price = trial, dates = as.POSIXct('2017-10-09 08:59:00'), datex = as.POSIXct('2017-10-10 09:00:59'))
chartSeries(trial)
addTA(cummax(Lo(trial))*0.995,on=1)
chartSeries(head(trial,50))
addTA(cummax(Lo(trial))*0.995,on=1)
load("C:/Users/Anthony/Desktop/ongoing/cn comdty/cn comdty session 2 clean.RData")
nxd=function(x,n=1,time_object=time(security))
{
x=as.POSIXct(x)
time_object=as.POSIXct(time_object)
i= match(x,time_object)
as.POSIXct(ifelse(i+n<1,
time_object[1],
ifelse((i+1)>length(time_object),
tail(time_object,1),
time_object[i+n])),origin=as.POSIXct( '1970-01-01 08:00:00'))
}
trailing_stop_pct=function(second_price,dates, datex, k=0.995)
{
#assume OHLC input
lo=Lo(second_price)
timestamp=time(lo)
price_period=lo[paste(nxd(dates,1,timestamp),nxd(datex,-1,timestamp),sep = '/')]
hwm=cummax(price_period)
limit=hwm*k
touch=head(price_period[price_period<limit],1)
if(length(touch)==0) NA
return(head(Op(second_price)[time(touch)+1],1))
}
########working until here
bt_stoploss=function(security, sig_n, sig_x=!sig_n,stoploss, ...)
{
# initialize
remain_n=sig_n
remain_x=sig_x
df=data.frame(`entry time`=as.Date(character()),
`entry price`=numeric(),
`exit time`=as.Date(character()),
`exit price`=numeric(),
`exit method`='')
time_x=as.POSIXct('1900-01-01')
time_end=tail(time(security),1)
repeat
{
#truncate sig_n before last exit
after_x=paste(time_x,'/',sep = '')
remain_n=remain_n[after_x]
first_sig_n=head(remain_n[remain_n],1)
#no more sig -> break
if(length(first_sig_n)==0 || time(first_sig_n)==time_end) break
#entry next open
time_n=nx_time(time(first_sig_n))
px_n=Op(security)[time_n]
#truncate sig_x before entry
after_n=paste(time_n,'/',sep = '')
remain_x=remain_x[after_n]
first_sig_x=head(remain_x[remain_x],1)
#if no more exit signal-> check stop loss
if(length(first_sig_x)==0 || time(first_sig_x)==time_end)
{
#fill the params later, check stop loss
#stop loss should return list of time, price and method
#if no stop loss, return something length 0
exit_sl=stoploss()
if(length(exit_sl)==0) break
#exit by stop loss if there is stop loss
time_x=exit_sl$time
px_x=exit_sl$price
}
# if there is exit signal
else
{
exit_sl=stoploss()
#case1: no stop loss
if(is.na(exit_sl))
{
time_x=time(nx_time(time(first_sig_x)))
px_x=Op(security)[time_x]
method='signal'
}
#case2: signal comes first
else if(time(exit_sl)>time(first_sig_x))
{
time_x=time(nx_time(time(first_sig_x)))
px_x=Op(security)[time_x]
method='signal'
}
#case3: stop loss comes first
else
{
time_x=exit_sl$time
px_x=exit_sl$price
method=exit_sl$method
}
}
temp=cbind.data.frame(`entry time`=time_n,
`entry price`=px_n,
`exit time`=time_x,
`exit price`=px_x,
`exit method`=method)
df=rbind(df,temp)
}
df
}
macd_hist=macd$macd - macd$signal
library(Rblpapi)
library(quantmod)
library(candlesticks)
library(tseries)
library(ggplot2)
library(reshape2)
library(foreach)
library(doParallel)
library(plyr)
library(lubridate)
macd_hist=macd$macd - macd$signal
signal_n=seriesIncr(macd_hist) & macd_hist<0
signal_x=seriesDecr(macd_hist)
trade3=bt_stoploss(security = security , sig_n = signal_n ,sig_x = signal_x,stoploss = trailing_stop_pct,  tick_price=dce_px_vo$px )
trade3=bt_stoploss(security = security , sig_n = signal_n ,sig_x = signal_x,stoploss = trailing_stop_pct,  second_price=to.period(dce_px_vo$px,period = 'seconds'))
df=data.frame(`entry time`=as.Date(character()),
`entry price`=numeric(),
`exit time`=as.Date(character()),
`exit price`=numeric(),
`exit method`='')
df=cbind.data.frame(`entry time`=as.Date(character()),
`entry price`=numeric(),
`exit time`=as.Date(character()),
`exit price`=numeric(),
`exit method`='')
as.Date(character())
numeric()
data.frame(`entry time`=as.Date(character()),
`entry price`=numeric(),
`exit time`=as.Date(character()),
`exit price`=numeric(),
`exit method`='')
data.frame(`entry time`=as.Date(character()),
`entry price`=numeric(),
`exit time`=as.Date(character()),
`exit price`=numeric(),
`exit method`=character())
bt_stoploss=function(security, sig_n, sig_x=!sig_n,stoploss, ...)
{
# initialize
remain_n=sig_n
remain_x=sig_x
df=data.frame(`entry time`=as.Date(character()),
`entry price`=numeric(),
`exit time`=as.Date(character()),
`exit price`=numeric(),
`exit method`=character())
time_x=as.POSIXct('1900-01-01')
time_end=tail(time(security),1)
repeat
{
#truncate sig_n before last exit
after_x=paste(time_x,'/',sep = '')
remain_n=remain_n[after_x]
first_sig_n=head(remain_n[remain_n],1)
#no more sig -> break
if(length(first_sig_n)==0 || time(first_sig_n)==time_end) break
#entry next open
time_n=nx_time(time(first_sig_n))
px_n=Op(security)[time_n]
#truncate sig_x before entry
after_n=paste(time_n,'/',sep = '')
remain_x=remain_x[after_n]
first_sig_x=head(remain_x[remain_x],1)
#if no more exit signal-> check stop loss
if(length(first_sig_x)==0 || time(first_sig_x)==time_end)
{
#fill the params later, check stop loss
#stop loss should return list of time, price and method
#if no stop loss, return something length 0
exit_sl=stoploss()
if(length(exit_sl)==0) break
#exit by stop loss if there is stop loss
time_x=exit_sl$time
px_x=exit_sl$price
}
# if there is exit signal
else
{
exit_sl=stoploss()
#case1: no stop loss
if(is.na(exit_sl))
{
time_x=time(nx_time(time(first_sig_x)))
px_x=Op(security)[time_x]
method='signal'
}
#case2: signal comes first
else if(time(exit_sl)>time(first_sig_x))
{
time_x=time(nx_time(time(first_sig_x)))
px_x=Op(security)[time_x]
method='signal'
}
#case3: stop loss comes first
else
{
time_x=exit_sl$time
px_x=exit_sl$price
method=exit_sl$method
}
}
temp=cbind.data.frame(`entry time`=time_n,
`entry price`=px_n,
`exit time`=time_x,
`exit price`=px_x,
`exit method`=method)
df=rbind(df,temp)
}
df
}
trade3=bt_stoploss(security = security , sig_n = signal_n ,sig_x = signal_x,stoploss = trailing_stop_pct,  second_price=to.period(dce_px_vo$px,period = 'seconds'))
nx_time=function(x,n=1,time_object=time(security))
{
x=as.POSIXct(x)
time_object=as.POSIXct(time_object)
i= match(x,time_object)
as.POSIXct(ifelse(i+n<1,
time_object[1],
ifelse((i+1)>length(time_object),
tail(time_object,1),
time_object[i+n])),origin=as.POSIXct( '1970-01-01 08:00:00'))
}
trade3=bt_stoploss(security = security , sig_n = signal_n ,sig_x = signal_x,stoploss = trailing_stop_pct,  second_price=to.period(dce_px_vo$px,period = 'seconds'))
nx_time=function(x,n=1,time_object=time(security))
{
x=as.POSIXct(x)
time_object=as.POSIXct(time_object)
i= match(x,time_object)
as.POSIXct(ifelse(i+n<1,
time_object[1],
ifelse((i+1)>length(time_object),
tail(time_object,1),
time_object[i+n])),origin=as.POSIXct( '1970-01-01 08:00:00'))
}
trailing_stop_pct=function(second_price,dates, datex, k=0.995)
{
#assume OHLC input
lo=Lo(second_price)
timestamp=time(lo)
price_period=lo[paste(nxd(dates,1,timestamp),nxd(datex,-1,timestamp),sep = '/')]
hwm=cummax(price_period)
limit=hwm*k
touch=head(price_period[price_period<limit],1)
if(length(touch)==0) NA
return(head(Op(second_price)[time(touch)+1],1))
}
trailing_stop_pct=function(second_price,time_sig_n, time_sig_x, k=0.995)
{
#assume OHLC input
lo=Lo(second_price)
timestamp=time(lo)
price_period=lo[paste(nxd(time_sig_n,1,timestamp),nxd(time_sig_x,-1,timestamp),sep = '/')]
hwm=cummax(price_period)
limit=hwm*k
touch=head(price_period[price_period<limit],1)
if(length(touch)==0) NA
return(head(Op(second_price)[time(touch)+1],1))
}
library(Rblpapi)
library(quantmod)
library(candlesticks)
library(tseries)
library(ggplot2)
library(reshape2)
library(foreach)
library(doParallel)
library(plyr)
library(lubridate)
