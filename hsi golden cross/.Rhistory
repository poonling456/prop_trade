ret_day[hold_period]=ROC(Cl(HSI))[hold_period]
ret_day[df$`exit date`]=log(df$`exit price`/Cl(HSI[nxd(df$`exit date`,-1)]))
ret_mean[as.character(m),as.character(n)]=mean(ret_day)
count[as.character(m),as.character(n)]=nrow(df)
dur_mean[as.character(m),as.character(n)]=length(ret_day[ret_day!=0])/count[as.character(m),as.character(n)]
std[as.character(m),as.character(n)]=sqrt(var(ret_day))
sr[as.character(m),as.character(n)]=ret_mean[as.character(m),as.character(n)]/std[as.character(m),as.character(n)]
mdd=maxdrawdown(cumsum(ret_day))
mdd_pct[as.character(m),as.character(n)]=mdd$maxdrawdown
mdd_dur[as.character(m),as.character(n)]=head(mdd$to,1)-head(mdd$from,1)
}
}
}
}
View(ret_mean)
source('C:/Users/Anthony/Desktop/ongoing/hsi golden cross/goldx.R', echo=TRUE)
View(sr)
plot(sr)
install.packages('ggplot2')
library(ggplot2)
heatmap(ret_mean)
0
ret_mean=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
count=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
dur_mean=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
std=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
sr=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
mdd_pct=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
mdd_dur=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
for(m in N)
{
for(n in N)
{
if(n-m>=3)
{
fast=SMA(Cl(HSI),m)
slow=SMA(Cl(HSI),n)
sig_n=fast>slow
sig_x=fast<slow
df=data.frame(`entry date`=as.Date(character()), `entry price`=numeric(),`exit date`=as.Date(character()), `exit price`=numeric())
entry=xts(numeric(),as.Date('1900-01-01'))
exit=xts(numeric(),as.Date('1900-01-01'))
repeat
{
remain_n=sig_n[sig_n & time(sig_n)>=time(exit)]
if(length(remain_n[remain_n])<=0 || head(time(remain_n),1)==tail(date,1)) break
entry=time(head(sig_n[sig_n & time(sig_n)>time(exit)],1))
if(length(entry)==0) break
entry=xts(Op(HSI)[nxd(entry)],nxd(entry))
remain_x=sig_x[sig_x & time(sig_x)>=time(entry)]
if(length(remain_x[remain_x])<=0) break
else
{
exit=time(head(sig_x[sig_x & time(sig_x)>=time(entry)],1))
exit=xts(Op(HSI)[nxd(exit)],nxd(exit))
temp=cbind.data.frame(`entry date`=time(entry), `entry price`=as.numeric(entry),`exit date`=time(exit), `exit price`=as.numeric(exit))
df=rbind(df,temp)
}
}
if(nrow(df)>0)
{
ret_day=xts(rep(0,length(date)),date)
ret_day[df$`entry date`]=log(Cl(HSI[df$`entry date`])/df$`entry price`)
hold_period=paste(nxd(df$`entry date`,1),'/',nxd(df$`exit date`,-1),sep = '')
ret_day[hold_period]=ROC(Cl(HSI))[hold_period]
ret_day[df$`exit date`]=log(df$`exit price`/Cl(HSI[nxd(df$`exit date`,-1)]))
ret_mean[as.character(m),as.character(n)]=mean(ret_day)
count[as.character(m),as.character(n)]=nrow(df)
dur_mean[as.character(m),as.character(n)]=length(ret_day[ret_day!=0])/count[as.character(m),as.character(n)]
std[as.character(m),as.character(n)]=sqrt(var(ret_day))
sr[as.character(m),as.character(n)]=ret_mean[as.character(m),as.character(n)]/std[as.character(m),as.character(n)]
mdd=maxdrawdown(cumsum(ret_day))
mdd_pct[as.character(m),as.character(n)]=mdd$maxdrawdown
mdd_dur[as.character(m),as.character(n)]=head(mdd$to,1)-head(mdd$from,1)
}
}
}
}
heatmap(ret_mean)
ret_mean
?heatmap
install.packages('reshape2')
ggplot(melt(ret_mean), aes(Var1,Var2, fill=value)) + geom_raster()
library(reshape2)
ggplot(melt(ret_mean), aes(Var1,Var2, fill=value)) + geom_raster()
?melt
ggplot(melt(ret_mean), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()
ggplot(melt(ret_mean), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()
ggplot(melt(count), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()
ggplot(melt(dur_mean), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()
ggplot(melt(std), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()
ggplot(melt(sr), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()
ggplot(melt(mdd_pct), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()
ggplot(melt(mdd_dur), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()
ggplot(melt(ret_mean), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster() +title('ret_mean')
ggplot(melt(count), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+title('count')
ggplot(melt(dur_mean), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+title('dur_mean')
ggplot(melt(std), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+title('std')
ggplot(melt(sr), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+title('sr')
ggplot(melt(mdd_pct), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+title('mdd_pct')
ggplot(melt(mdd_dur), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+title('mdd_dur')
ggplot(melt(ret_mean), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster() +ggtitle('ret_mean')
ggplot(melt(ret_mean), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster() +ggtitle('ret_mean')
ggplot(melt(count), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('count')
ggplot(melt(dur_mean), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('dur_mean')
ggplot(melt(std), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('std')
ggplot(melt(sr), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('sr')
ggplot(melt(mdd_pct), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('mdd_pct')
ggplot(melt(mdd_dur), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('mdd_dur')
ggplot(melt(ret_mean), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster() +ggtitle('ret_mean')
ggplot(melt(count), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('count')
ggplot(melt(dur_mean), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('dur_mean')
ggplot(melt(std), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('std')
ggplot(melt(std), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('std')
ggplot(melt(sr), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('sr')
ggplot(melt(mdd_pct), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('mdd_pct')
ggplot(melt(mdd_dur), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('mdd_dur')
ggplot(melt(ret_mean), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster() +ggtitle('ret_mean')
melt(ret_mean)
rank(melt(ret_mean))
sort(melt(ret_mean))
rank(1,2,3)
rank(c(1,2,3))
order(c(1,2,3))
order(c(14,2,3))
order(c(14,26,31))
order(c(14,612,31,354,21,2))
rank(c(14,612,31,354,21,2))
melt(ret_mean)[rank(melt(ret_mean)$value)]
melt(ret_mean)[rank(melt(ret_mean)$value),]
rank(c(1,2,3,4,5))
rank(c(1,2,3,4,5,5))
rank(c(1,2,3,4,5,5),ties.method = 'first')
melt(ret_mean)[rank(melt(ret_mean)$value,ties.method = 'first'),]
rank(c(14,612,31,354,21,2))
melt(ret_mean)[order(melt(ret_mean)$value,decreasing = T),]
ret_mean_rank=melt(ret_mean)[order(melt(ret_mean)$value,decreasing = T),]
sr_rank=melt(sr)[order(melt(sr)$value,decreasing = T),]
View(ret_mean_rank)
View(sr_rank)
library(quantmod)
library(tseries)
library(ggplot2)
library(reshape2)
nxd=function(x,n=1)
{
cond_tail=x+n>=tail(date,1)
cond_head=x+n<=head(date,1)
as.Date(mapply(function(x,cond_tail,cond_head)
{
if(cond_tail) tail(date,1)
else if(cond_head) head(date,1)
else date[which(date==x)+n]
},x,cond_tail,cond_head))
}
rawdata=read.csv('hsi.csv')
date=as.Date(levels(rawdata$Date)[rawdata$Date],'%m/%d/%Y')
HSI=xts(rawdata[,-1],date)
N=c(seq(1,10),seq(12,30,2),seq(35,100,5),seq(110,160,10),seq(160,200,20),250)
ret_mean=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
count=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
dur_mean=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
std=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
sr=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
mdd_pct=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
mdd_dur=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
for(m in N)
{
for(n in N)
{
if(n-m>=3)
{
fast=SMA(Cl(HSI),m)
slow=SMA(Cl(HSI),n)
sig_n=fast>slow
sig_x=fast<slow
df=data.frame(`entry date`=as.Date(character()), `entry price`=numeric(),`exit date`=as.Date(character()), `exit price`=numeric())
entry=xts(numeric(),as.Date('1900-01-01'))
exit=xts(numeric(),as.Date('1900-01-01'))
repeat
{
remain_n=sig_n[sig_n & time(sig_n)>=time(exit)]
if(length(remain_n[remain_n])<=0 || head(time(remain_n),1)==tail(date,1)) break
entry=time(head(sig_n[sig_n & time(sig_n)>time(exit)],1))
if(length(entry)==0) break
entry=xts(Op(HSI)[nxd(entry)],nxd(entry))
remain_x=sig_x[sig_x & time(sig_x)>=time(entry)]
if(length(remain_x[remain_x])<=0) break
else
{
exit=time(head(sig_x[sig_x & time(sig_x)>=time(entry)],1))
exit=xts(Op(HSI)[nxd(exit)],nxd(exit))
temp=cbind.data.frame(`entry date`=time(entry), `entry price`=as.numeric(entry),`exit date`=time(exit), `exit price`=as.numeric(exit))
df=rbind(df,temp)
}
}
if(nrow(df)>0)
{
ret_day=xts(rep(0,length(date)),date)
ret_day[df$`entry date`]=log(Cl(HSI[df$`entry date`])/df$`entry price`)
hold_period=paste(nxd(df$`entry date`,1),'/',nxd(df$`exit date`,-1),sep = '')
ret_day[hold_period]=ROC(Cl(HSI))[hold_period]
ret_day[df$`exit date`]=log(df$`exit price`/Cl(HSI[nxd(df$`exit date`,-1)]))
ret_mean[as.character(m),as.character(n)]=mean(ret_day)
count[as.character(m),as.character(n)]=nrow(df)
dur_mean[as.character(m),as.character(n)]=length(ret_day[ret_day!=0])/count[as.character(m),as.character(n)]
std[as.character(m),as.character(n)]=sqrt(var(ret_day))
sr[as.character(m),as.character(n)]=ret_mean[as.character(m),as.character(n)]/std[as.character(m),as.character(n)]
mdd=maxdrawdown(cumsum(ret_day))
mdd_pct[as.character(m),as.character(n)]=mdd$maxdrawdown
mdd_dur[as.character(m),as.character(n)]=head(mdd$to,1)-head(mdd$from,1)
}
}
}
}
ggplot(melt(ret_mean), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster() +ggtitle('ret_mean')
ggplot(melt(count), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('count')
ggplot(melt(dur_mean), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('dur_mean')
ggplot(melt(std), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('std')
ggplot(melt(sr), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('sr')
ggplot(melt(mdd_pct), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('mdd_pct')
ggplot(melt(mdd_dur), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('mdd_dur')
ret_mean['160',]
N=c(seq(1,10),seq(12,30,2),seq(35,100,5),seq(110,160,10),seq(180,200,20),250)
ret_mean=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
count=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
dur_mean=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
std=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
sr=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
mdd_pct=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
mdd_dur=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
for(m in N)
{
for(n in N)
{
if(n-m>=3)
{
fast=SMA(Cl(HSI),m)
slow=SMA(Cl(HSI),n)
sig_n=fast>slow
sig_x=fast<slow
df=data.frame(`entry date`=as.Date(character()), `entry price`=numeric(),`exit date`=as.Date(character()), `exit price`=numeric())
entry=xts(numeric(),as.Date('1900-01-01'))
exit=xts(numeric(),as.Date('1900-01-01'))
repeat
{
remain_n=sig_n[sig_n & time(sig_n)>=time(exit)]
if(length(remain_n[remain_n])<=0 || head(time(remain_n),1)==tail(date,1)) break
entry=time(head(sig_n[sig_n & time(sig_n)>time(exit)],1))
if(length(entry)==0) break
entry=xts(Op(HSI)[nxd(entry)],nxd(entry))
remain_x=sig_x[sig_x & time(sig_x)>=time(entry)]
if(length(remain_x[remain_x])<=0) break
else
{
exit=time(head(sig_x[sig_x & time(sig_x)>=time(entry)],1))
exit=xts(Op(HSI)[nxd(exit)],nxd(exit))
temp=cbind.data.frame(`entry date`=time(entry), `entry price`=as.numeric(entry),`exit date`=time(exit), `exit price`=as.numeric(exit))
df=rbind(df,temp)
}
}
if(nrow(df)>0)
{
ret_day=xts(rep(0,length(date)),date)
ret_day[df$`entry date`]=log(Cl(HSI[df$`entry date`])/df$`entry price`)
hold_period=paste(nxd(df$`entry date`,1),'/',nxd(df$`exit date`,-1),sep = '')
ret_day[hold_period]=ROC(Cl(HSI))[hold_period]
ret_day[df$`exit date`]=log(df$`exit price`/Cl(HSI[nxd(df$`exit date`,-1)]))
ret_mean[as.character(m),as.character(n)]=mean(ret_day)
count[as.character(m),as.character(n)]=nrow(df)
dur_mean[as.character(m),as.character(n)]=length(ret_day[ret_day!=0])/count[as.character(m),as.character(n)]
std[as.character(m),as.character(n)]=sqrt(var(ret_day))
sr[as.character(m),as.character(n)]=ret_mean[as.character(m),as.character(n)]/std[as.character(m),as.character(n)]
mdd=maxdrawdown(cumsum(ret_day))
mdd_pct[as.character(m),as.character(n)]=mdd$maxdrawdown
mdd_dur[as.character(m),as.character(n)]=head(mdd$to,1)-head(mdd$from,1)
}
}
}
}
EMA(ret_day,length(ret_day))
na.omit(EMA(ret_day,length(ret_day)))
na.omit(SMA(ret_day,length(ret_day)))
na.omit(EMA(ret_day,length(ret_day)))-na.omit(SMA(ret_day,length(ret_day)))
nxd=function(x,n=1)
{
cond_tail=x+n>=tail(date,1)
cond_head=x+n<=head(date,1)
as.Date(mapply(function(x,cond_tail,cond_head)
{
if(cond_tail) tail(date,1)
else if(cond_head) head(date,1)
else date[which(date==x)+n]
},x,cond_tail,cond_head))
}
rawdata=read.csv('hsi.csv')
date=as.Date(levels(rawdata$Date)[rawdata$Date],'%m/%d/%Y')
HSI=xts(rawdata[,-1],date)
N=c(seq(1,10),seq(12,30,2),seq(35,100,5),seq(110,160,10),seq(180,200,20),250)
ret_mean=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
recent_ret_mean=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
count=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
dur_mean=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
std=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
sr=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
mdd_pct=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
mdd_dur=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
for(m in N)
{
for(n in N)
{
if(n-m>=3)
{
fast=SMA(Cl(HSI),m)
slow=SMA(Cl(HSI),n)
sig_n=fast>slow
sig_x=fast<slow
df=data.frame(`entry date`=as.Date(character()), `entry price`=numeric(),`exit date`=as.Date(character()), `exit price`=numeric())
entry=xts(numeric(),as.Date('1900-01-01'))
exit=xts(numeric(),as.Date('1900-01-01'))
repeat
{
remain_n=sig_n[sig_n & time(sig_n)>=time(exit)]
if(length(remain_n[remain_n])<=0 || head(time(remain_n),1)==tail(date,1)) break
entry=time(head(sig_n[sig_n & time(sig_n)>time(exit)],1))
if(length(entry)==0) break
entry=xts(Op(HSI)[nxd(entry)],nxd(entry))
remain_x=sig_x[sig_x & time(sig_x)>=time(entry)]
if(length(remain_x[remain_x])<=0) break
else
{
exit=time(head(sig_x[sig_x & time(sig_x)>=time(entry)],1))
exit=xts(Op(HSI)[nxd(exit)],nxd(exit))
temp=cbind.data.frame(`entry date`=time(entry), `entry price`=as.numeric(entry),`exit date`=time(exit), `exit price`=as.numeric(exit))
df=rbind(df,temp)
}
}
if(nrow(df)>0)
{
ret_day=xts(rep(0,length(date)),date)
ret_day[df$`entry date`]=log(Cl(HSI[df$`entry date`])/df$`entry price`)
hold_period=paste(nxd(df$`entry date`,1),'/',nxd(df$`exit date`,-1),sep = '')
ret_day[hold_period]=ROC(Cl(HSI))[hold_period]
ret_day[df$`exit date`]=log(df$`exit price`/Cl(HSI[nxd(df$`exit date`,-1)]))
ret_mean[as.character(m),as.character(n)]=mean(ret_day)
recent_ret_mean[as.character(m),as.character(n)]=mean(tail(ret_day,1000))
count[as.character(m),as.character(n)]=nrow(df)
dur_mean[as.character(m),as.character(n)]=length(ret_day[ret_day!=0])/count[as.character(m),as.character(n)]
std[as.character(m),as.character(n)]=sqrt(var(ret_day))
sr[as.character(m),as.character(n)]=ret_mean[as.character(m),as.character(n)]/std[as.character(m),as.character(n)]
mdd=maxdrawdown(cumsum(ret_day))
mdd_pct[as.character(m),as.character(n)]=mdd$maxdrawdown
mdd_dur[as.character(m),as.character(n)]=head(mdd$to,1)-head(mdd$from,1)
}
}
}
}
nxd=function(x,n=1)
{
cond_tail=x+n>=tail(date,1)
cond_head=x+n<=head(date,1)
as.Date(mapply(function(x,cond_tail,cond_head)
{
if(cond_tail) tail(date,1)
else if(cond_head) head(date,1)
else date[which(date==x)+n]
},x,cond_tail,cond_head))
}
rawdata=read.csv('hsi.csv')
date=as.Date(levels(rawdata$Date)[rawdata$Date],'%m/%d/%Y')
HSI=xts(rawdata[,-1],date)
N=c(seq(1,10),seq(12,30,2),seq(35,100,5),seq(110,160,10),seq(180,200,20),250)
ret_mean=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
recent_ret_mean=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
count=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
dur_mean=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
std=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
sr=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
mdd_pct=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
mdd_dur=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
for(m in N)
{
for(n in N)
{
if(n-m>=3)
{
fast=SMA(Cl(HSI),m)
slow=SMA(Cl(HSI),n)
sig_n=fast>slow
sig_x=fast<slow
df=data.frame(`entry date`=as.Date(character()), `entry price`=numeric(),`exit date`=as.Date(character()), `exit price`=numeric())
entry=xts(numeric(),as.Date('1900-01-01'))
exit=xts(numeric(),as.Date('1900-01-01'))
repeat
{
remain_n=sig_n[sig_n & time(sig_n)>=time(exit)]
if(length(remain_n[remain_n])<=0 || head(time(remain_n),1)==tail(date,1)) break
entry=time(head(sig_n[sig_n & time(sig_n)>time(exit)],1))
if(length(entry)==0) break
entry=xts(Op(HSI)[nxd(entry)],nxd(entry))
remain_x=sig_x[sig_x & time(sig_x)>=time(entry)]
if(length(remain_x[remain_x])<=0) break
else
{
exit=time(head(sig_x[sig_x & time(sig_x)>=time(entry)],1))
exit=xts(Op(HSI)[nxd(exit)],nxd(exit))
temp=cbind.data.frame(`entry date`=time(entry), `entry price`=as.numeric(entry),`exit date`=time(exit), `exit price`=as.numeric(exit))
df=rbind(df,temp)
}
}
if(nrow(df)>0)
{
ret_day=xts(rep(0,length(date)),date)
ret_day[df$`entry date`]=log(Cl(HSI[df$`entry date`])/df$`entry price`)
hold_period=paste(nxd(df$`entry date`,1),'/',nxd(df$`exit date`,-1),sep = '')
ret_day[hold_period]=ROC(Cl(HSI))[hold_period]
ret_day[df$`exit date`]=log(df$`exit price`/Cl(HSI[nxd(df$`exit date`,-1)]))
ret_mean[as.character(m),as.character(n)]=mean(ret_day)
recent_ret_mean[as.character(m),as.character(n)]=mean(tail(ret_day,1000))
count[as.character(m),as.character(n)]=nrow(df)
dur_mean[as.character(m),as.character(n)]=length(ret_day[ret_day!=0])/count[as.character(m),as.character(n)]
std[as.character(m),as.character(n)]=sqrt(var(ret_day))
sr[as.character(m),as.character(n)]=ret_mean[as.character(m),as.character(n)]/std[as.character(m),as.character(n)]
mdd=maxdrawdown(cumsum(ret_day))
mdd_pct[as.character(m),as.character(n)]=mdd$maxdrawdown
mdd_dur[as.character(m),as.character(n)]=head(mdd$to,1)-head(mdd$from,1)
}
}
}
}
ggplot(melt(ret_mean), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster() +ggtitle('ret_mean')
ggplot(melt(recent_ret_mean), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster() +ggtitle('recent_ret_mean')
ggplot(melt(sr), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('sr')
ret_mean_rank=melt(ret_mean)[order(melt(ret_mean)$value,decreasing = T),]
recent_ret_mean_rank=melt(recent_ret_mean)[order(melt(recent_ret_mean)$value,decreasing = T),]
sr_rank=melt(sr)[order(melt(sr)$value,decreasing = T),]
View(recent_ret_mean_rank)
rawdata=read.csv('hsi.csv')
date=as.Date(levels(rawdata$Date)[rawdata$Date],'%m/%d/%Y')
HSI=xts(rawdata[,-1],date)
N=c(seq(1,10),seq(12,30,2),seq(35,100,5),seq(110,160,10),seq(180,200,20),250)
ret_mean=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
recent_ret_mean=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
count=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
dur_mean=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
std=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
recent_std=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
sr=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
recent_sr=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
mdd_pct=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
mdd_dur=matrix(0,nrow = length(N),ncol = length(N),dimnames = list(N,N))
for(m in N)
{
for(n in N)
{
if(n-m>=3)
{
fast=SMA(Cl(HSI),m)
slow=SMA(Cl(HSI),n)
sig_n=fast>slow
sig_x=fast<slow
df=data.frame(`entry date`=as.Date(character()), `entry price`=numeric(),`exit date`=as.Date(character()), `exit price`=numeric())
entry=xts(numeric(),as.Date('1900-01-01'))
exit=xts(numeric(),as.Date('1900-01-01'))
repeat
{
remain_n=sig_n[sig_n & time(sig_n)>=time(exit)]
if(length(remain_n[remain_n])<=0 || head(time(remain_n),1)==tail(date,1)) break
entry=time(head(sig_n[sig_n & time(sig_n)>time(exit)],1))
if(length(entry)==0) break
entry=xts(Op(HSI)[nxd(entry)],nxd(entry))
remain_x=sig_x[sig_x & time(sig_x)>=time(entry)]
if(length(remain_x[remain_x])<=0) break
else
{
exit=time(head(sig_x[sig_x & time(sig_x)>=time(entry)],1))
exit=xts(Op(HSI)[nxd(exit)],nxd(exit))
temp=cbind.data.frame(`entry date`=time(entry), `entry price`=as.numeric(entry),`exit date`=time(exit), `exit price`=as.numeric(exit))
df=rbind(df,temp)
}
}
if(nrow(df)>0)
{
ret_day=xts(rep(0,length(date)),date)
ret_day[df$`entry date`]=log(Cl(HSI[df$`entry date`])/df$`entry price`)
hold_period=paste(nxd(df$`entry date`,1),'/',nxd(df$`exit date`,-1),sep = '')
ret_day[hold_period]=ROC(Cl(HSI))[hold_period]
ret_day[df$`exit date`]=log(df$`exit price`/Cl(HSI[nxd(df$`exit date`,-1)]))
ret_mean[as.character(m),as.character(n)]=mean(ret_day)
recent_ret_mean[as.character(m),as.character(n)]=mean(tail(ret_day,1000))
count[as.character(m),as.character(n)]=nrow(df)
dur_mean[as.character(m),as.character(n)]=length(ret_day[ret_day!=0])/count[as.character(m),as.character(n)]
std[as.character(m),as.character(n)]=sqrt(var(ret_day))
recent_std[as.character(m),as.character(n)]=sqrt(var(tail(ret_day,1000)))
sr[as.character(m),as.character(n)]=ret_mean[as.character(m),as.character(n)]/std[as.character(m),as.character(n)]
recent_sr[as.character(m),as.character(n)]=recent_ret_mean[as.character(m),as.character(n)]/recent_std[as.character(m),as.character(n)]
mdd=maxdrawdown(cumsum(ret_day))
mdd_pct[as.character(m),as.character(n)]=mdd$maxdrawdown
mdd_dur[as.character(m),as.character(n)]=head(mdd$to,1)-head(mdd$from,1)
}
}
}
}
ggplot(melt(ret_mean), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster() +ggtitle('ret_mean')
ggplot(melt(recent_ret_mean), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster() +ggtitle('recent_ret_mean')
ggplot(melt(sr), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('sr')
ggplot(melt(recent_sr), aes(factor(Var1),factor(Var2), fill=value)) + geom_raster()+ggtitle('recent_sr')
ret_mean_rank=melt(ret_mean)[order(melt(ret_mean)$value,decreasing = T),]
recent_ret_mean_rank=melt(recent_ret_mean)[order(melt(recent_ret_mean)$value,decreasing = T),]
sr_rank=melt(sr)[order(melt(sr)$value,decreasing = T),]
recent_sr_rank=melt(recent_sr)[order(melt(recent_sr)$value,decreasing = T),]
recent_sr_rank
